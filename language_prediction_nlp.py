# -*- coding: utf-8 -*-
"""Language_prediction_NLP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ytBe--gRey_MyFQuXBDOyRuWcT7OuVSZ
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sb

dataset=pd.read_csv('Language Detection.csv')

dataset.head()

dataset.isnull().sum()

dataset['Language'].value_counts()

#visualizing
fig, ax = plt.subplots(figsize=(16, 4))
sb.countplot(x='Language',data=dataset,ax=ax)

# x=np.array(dataset['Text'])
# y=np.array(dataset['Language'])
x=dataset.iloc[:,0].values
y=dataset.iloc[:,1].values

type(y)

# converting txt into numerical value and make sparse matrix where row is a text and columnns are different words
from sklearn.feature_extraction.text import CountVectorizer #it convert text into numeric values for machines
cv=CountVectorizer(lowercase=False)
x=cv.fit_transform(x)
x_array=x.toarray()
df=pd.DataFrame(data=x_array,columns=cv.get_feature_names_out())
print(df.head())
df.shape

#splitting dataset
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

from sklearn.naive_bayes import MultinomialNB #MultinominalNB for multiclassifiers
model=MultinomialNB()
model.fit(x_train,y_train)

y_pred=model.predict(x_test)

print(np.concatenate((y_test.reshape(len(y_test),1),y_pred.reshape(len(y_pred),1)),1))

model.score(x_test,y_test) # calculate y_pred for x_test and compare with y_test

user=input('Enter a text: ')
data=cv.transform([user]).toarray()
output=model.predict(data)
print(output)